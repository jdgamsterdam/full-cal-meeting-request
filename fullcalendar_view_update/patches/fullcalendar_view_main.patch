diff --git a/./../../fullcalendar_view/src/FullcalendarViewPreprocess.php b/./assets/src/FullcalendarViewPreprocess.php
old mode 100644
new mode 100755
index 9e8b451..63c3234
--- a/./../../fullcalendar_view/src/FullcalendarViewPreprocess.php
+++ b/./assets/src/FullcalendarViewPreprocess.php
@@ -3,19 +3,18 @@
 namespace Drupal\fullcalendar_view;
 
 use Drupal\Component\Utility\Xss;
-use Drupal\Core\Access\CsrfTokenGenerator;
 use Drupal\Core\Datetime\DrupalDateTime;
-use Drupal\Core\Entity\EntityTypeManagerInterface;
-use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
+use Symfony\Component\DependencyInjection\ContainerInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Access\CsrfTokenGenerator;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\fullcalendar_view\TimezoneService;
 
-/**
- *
- */
 class FullcalendarViewPreprocess {
   use StringTranslationTrait;
 
-  protected static $viewIndex = 0;
+  protected  static $viewIndex = 0;
 
   /**
    * The language manager object for retrieving the correct language code.
@@ -71,7 +70,7 @@ class FullcalendarViewPreprocess {
    *   Template variables.
    */
   public function process(array &$variables) {
-    /** @var \Drupal\views\ViewExecutable $view */
+    /* @var \Drupal\views\ViewExecutable $view */
     $view = $variables['view'];
     // View index.
     $view_index = self::$viewIndex++;
@@ -79,6 +78,7 @@ class FullcalendarViewPreprocess {
     $options = $style->options;
     $fields = $view->field;
 
+
     // Get current language.
     $language = $this->languageManager->getCurrentLanguage();
 
@@ -89,8 +89,11 @@ class FullcalendarViewPreprocess {
     if (!$user->isAnonymous()) {
       $token = $this->tokenGenerator->get($user->id());
     }
-    //
-    // New event bundle type.
+
+    // FCMR - New event bundle type.
+    $use_url_to_create = $options['open_from_url'];
+
+
     $event_bundle_type = $options['bundle_type'];
     $entity_type = $view->getBaseEntityType();
     if ($entity_type->id() === 'node') {
@@ -106,6 +109,7 @@ class FullcalendarViewPreprocess {
       }
     }
 
+
     // Can the user add a new event?
     $entity_manager = $this->entityTypeManager;
     $access_handler = $entity_manager->getAccessControlHandler($entity_type->id());
@@ -113,6 +117,8 @@ class FullcalendarViewPreprocess {
     if ($access_handler->createAccess($event_bundle_type)) {
       $dbl_click_to_create = TRUE;
     }
+
+    
     // Pass entity type to twig template.
     $variables['entity_id'] = $entity_type->id();
     // Update options for twig.
@@ -121,7 +127,7 @@ class FullcalendarViewPreprocess {
     // or if this feature is turn off.
     $variables['showAddEvent'] = $dbl_click_to_create
     && $options['createEventLink'];
-    // Time format.
+    // Time format
     $timeFormat = $options['timeFormat'];
     // Field machine name of start date.
     $start_field = $options['start'];
@@ -134,9 +140,32 @@ class FullcalendarViewPreprocess {
     // Field machine name of taxonomy field.
     $tax_field = $options['tax_field'];
     // Field machine name of event duration.
-    $duration_field = $options['duration'] ?? NULL;
+    $duration_field = isset($options['duration']) ? $options['duration'] : NULL;
     // Field machine name of excluding dates field.
-    $rrule_field = $options['rrule'] ?? NULL;
+    $rrule_field = isset($options['rrule']) ? $options['rrule'] : NULL;
+
+    //FCMR - Add Items for JS
+    //Can use to get the value of the select. - But not used
+    $exposed_input = $view->getExposedInput();
+    $selectedCalendarID = $exposed_input['display_name_selective'];
+    $open_from_url = $options['open_from_url'];
+    $appointment_url = $options['appointment_url'];
+    $blackout_before_today = $options['blackout_before_today'];
+
+    //However since we want the real user ID we will get the uid entry from the first row of the return set. Since this is a filter every row should have the same value
+    //The field for the UID is users_field_data_node__field_calendar_owner_uid , but probably should make a field to enter this
+    //To Find the correct Field look in the AS section of the view query 
+    $result_rows = $view->result;
+    // Check if there are rows.
+    if (!empty($result_rows)) {
+      // Get the uid from the first row.
+      $first_row = $result_rows[0];
+      $calendar_uid = $first_row->users_field_data_node__field_ical_calendar_owner_uid;
+    }
+    $allOptions = json_encode($options);
+    $selectedEventBundleType = $options['bundle_type'];
+
+
 
     // Default date of the calendar.
     switch ($options['default_date_source']) {
@@ -181,7 +210,7 @@ class FullcalendarViewPreprocess {
       // Allowed tags for title markup.
       $title_allowed_tags = Xss::getAdminTagList();
       // Remove the 'a' tag from allowed list.
-      if (($tag_key = array_search('a', $title_allowed_tags)) !== FALSE) {
+      if (($tag_key = array_search('a', $title_allowed_tags)) !== false) {
         unset($title_allowed_tags[$tag_key]);
       }
       // Timezone conversion service.
@@ -246,7 +275,7 @@ class FullcalendarViewPreprocess {
         $link_url = strstr($title, 'href="');
         if ($link_url) {
           $link_url = substr($link_url, 6);
-          $link_url = strstr($link_url, '"', TRUE);
+          $link_url = strstr($link_url, '"', true);
         }
         else {
           $link_url = '';
@@ -257,7 +286,7 @@ class FullcalendarViewPreprocess {
           foreach ($start_dates as $i => $start_date) {
             $idkey = $row->index . '-' . $i;
             $entry = [
-              'title' => Xss::filter($title, $title_allowed_tags),
+              'title' =>  Xss::filter($title, $title_allowed_tags),
               'id' => $idkey,
               'eid' => $entity_id,
               'url' => $link_url,
@@ -282,8 +311,8 @@ class FullcalendarViewPreprocess {
                 }
                 else {
                   $valid = FALSE;
-                  // Checking supported field types form plugin defintions.
-                  foreach ($variables['fullcalendar_fieldtypes'] as $fieldtype) {
+                  // checking supported field types form plugin defintions
+                  foreach($variables['fullcalendar_fieldtypes'] as $fieldtype) {
                     if (strpos($start_field_option['type'], $fieldtype) === 0) {
                       $valid = TRUE;
                       break;
@@ -312,7 +341,7 @@ class FullcalendarViewPreprocess {
 
               if ($all_day) {
                 $entry['start'] = $start_date_value;
-                $entry['allDay'] = TRUE;
+                $entry['allDay'] = true;
               }
               else {
                 // Drupal store date time in UTC timezone.
@@ -352,7 +381,7 @@ class FullcalendarViewPreprocess {
                   // which is not what we want. So we need one day offset.
                   $end->modify('+1 day');
                   $entry['end'] = $end->format('Y-m-d');
-                  $entry['allDay'] = TRUE;
+                  $entry['allDay'] = true;
                 }
                 else {
                   // Drupal store date time in UTC timezone.
@@ -368,11 +397,9 @@ class FullcalendarViewPreprocess {
             // Set the color for this event.
             if (isset($event_type) && isset($color_tax[$event_type])) {
               $entry['backgroundColor'] = $color_tax[$event_type];
-              $entry['borderColor'] = $color_tax[$event_type];
             }
             elseif (isset($color_content[$entity_bundle])) {
               $entry['backgroundColor'] = $color_content[$entity_bundle];
-              $entry['borderColor'] = $color_content[$entity_bundle];
             }
             // Recurring event.
             if (!empty($rrule_field)) {
@@ -393,16 +420,16 @@ class FullcalendarViewPreprocess {
       unset($view->row_index);
       // Fullcalendar options.
       $calendar_options = [
-        'plugins' => ['moment', 'interaction', 'dayGrid', 'timeGrid', 'list', 'rrule'],
+        'plugins' => [ 'moment','interaction', 'dayGrid', 'timeGrid', 'list', 'rrule' ],
         'timeZone' => $timezone,
-        'defaultView' => $options['default_view'] ?? 'dayGridMonth',
-        'defaultMobileView' => $options['default_mobile_view'] ?? 'listYear',
-        'mobileWidth' => $options['mobile_width'] ?? 768,
+        'defaultView' => isset($options['default_view']) ? $options['default_view'] : 'dayGridMonth',
+        'defaultMobileView' => isset($options['default_mobile_view']) ? $options['default_mobile_view'] : 'listYear',
+        'mobileWidth' => isset($options['mobile_width']) ? $options['mobile_width'] : 768,
         'defaultDate' => empty($default_date) ? date('Y-m-d') : $default_date,
         'header' => [
           'left' => $left_buttons,
           'center' => 'title',
-          'right' => $right_buttons ?? 'dayGridMonth,timeGridWeek,timeGridDay,listYear',
+          'right' => $right_buttons ?? 'dayGridMonth,timeGridWeek,timeGridDay,listYear'
         ],
         'eventTimeFormat' => $timeFormat,
         'firstDay' => $first_day,
@@ -426,14 +453,12 @@ class FullcalendarViewPreprocess {
         'top' => 0,
         'width' => 640,
         'height' => 480,
-      // Enable to be moved by mouse.
-        'movable' => TRUE,
-      // Enable to be resized by mouse.
-        'resizable' => TRUE,
-        'style' => [
+        'movable' => true, //Enable to be moved by mouse
+        'resizable' => true, //Enable to be resized by mouse
+        'style' =>  [
           'backgroundColor' => 'rgba(255,255,255,0.9)',
-          'font-size' => '1rem',
-        ],
+          'font-size' => '1rem'
+        ]
       ];
       // Modal options.
       $dialog_modal_options = [
@@ -476,7 +501,16 @@ class FullcalendarViewPreprocess {
         // Entity type.
         'entityType' => $entity_type->id(),
         // URL of the new event form.
-        'addForm' => $add_form ?? '',
+        'addForm' => isset($add_form) ? $add_form : '',
+        
+        //FCMR - Full URL of Custom new event form.
+        'selectedCalendarDropdown' => isset($selectedCalendarID) ? $selectedCalendarID : '',
+        'selectedCalendar' => $calendar_uid,
+        'allOptions' => $allOptions,
+        'openFromURL' => $open_from_url,
+        'appointmentURL' => $appointment_url,
+        'blackoutOldDates' => $blackout_before_today,
+
         // CSRF token.
         'token' => $token,
         // Show an event details in a new window (tab).
@@ -489,6 +523,7 @@ class FullcalendarViewPreprocess {
         'dialog_modal_options' => json_encode($dialog_modal_options),
       ];
 
+
       if (!empty($options['fetchGoogleHolidays'])) {
         $options['googleHolidaysSettings']['googleCalendarGroup'] = $this->localizeGoogleCalendarId(
           $options['googleHolidaysSettings']['googleCalendarGroup'],
@@ -506,7 +541,7 @@ class FullcalendarViewPreprocess {
     }
   }
 
-  /**
+/**
    * @param string $calendar_id
    * @param string $langcode
    *
@@ -532,19 +567,15 @@ class FullcalendarViewPreprocess {
     switch ($langcode) {
       case "en-x-simple":
         return "en";
-
       case "pt-pt":
         return "pt";
-
       case "zh-hans":
         return "zh-cn";
-
       case "zh-hant":
         return "zh-tw";
-
       default:
         return $langcode;
     }
   }
-
 }
+
